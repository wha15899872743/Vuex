Vuex  
	1.创建Vuex对象
		1.1 state属性：容器存储共享属性
		1.2 mutations属性：操作(修改)容器中存储的共享数据
		1.3 getters属性：操作(获得) 容器中存储的数据
	2.将Vuex对象注册Vue实例
	3.调用Vuex数据
			 (1) mutations 属性 this.$store.commit("方法名")
			 (2) getters   属性 {{$store.getters.方法名}}
	4.mutations 方法可增加一个参数
		increment方法可以增加一个参数
		 increment(state,c){
				state.count+=c
		 }
		 this.$store.commit("increment",3)

		操作：
			①在main.js中
			 1.下载安装Vuex  npm i vuex -D
			 2.引入Vuex
				import Vuex from "vuex"
			 3.注册Vuex实例
				Vue.use(Vuex)
			 4.创建Vuex实例对象
					var store=new Vuex.Store({
						state:{
							/*共享值*/
							count:0
							},
						mutations:{
							increment(state){
								state.count++
							},//参数共享修改两个方法
							substract(state){
								state.count++
							}，//参数
						},
						getters:{
							optCount:function(state){
								return state.count  //返回共享数据
							}
						}
					});
			 5.注册Vue实例

			 在new Vue中 加上实例对象名
			   store
				 注册完毕